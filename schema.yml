openapi: 3.0.3
info:
  title: Hospital Management System API
  version: 1.0.0
  description: Official API documentation for the HMS project.
paths:
  /api/v1/clinical/appointments/:
    get:
      operationId: clinical_appointments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentList'
          description: ''
    post:
      operationId: clinical_appointments_create
      tags:
      - Clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Appointment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
  /api/v1/clinical/appointments/{appointment_pk}/medical-record/:
    get:
      operationId: clinical_appointments_medical_record_list
      parameters:
      - in: path
        name: appointment_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicalRecordList'
          description: ''
    post:
      operationId: clinical_appointments_medical_record_create
      parameters:
      - in: path
        name: appointment_pk
        schema:
          type: string
        required: true
      tags:
      - Clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
          description: ''
  /api/v1/clinical/appointments/{appointment_pk}/medical-record/{id}/:
    get:
      operationId: clinical_appointments_medical_record_retrieve
      parameters:
      - in: path
        name: appointment_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
          description: ''
    put:
      operationId: clinical_appointments_medical_record_update
      parameters:
      - in: path
        name: appointment_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
          description: ''
    patch:
      operationId: clinical_appointments_medical_record_partial_update
      parameters:
      - in: path
        name: appointment_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicalRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMedicalRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMedicalRecord'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
          description: ''
    delete:
      operationId: clinical_appointments_medical_record_destroy
      parameters:
      - in: path
        name: appointment_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Clinical
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/clinical/appointments/{id}/:
    get:
      operationId: clinical_appointments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
    put:
      operationId: clinical_appointments_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Appointment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
    patch:
      operationId: clinical_appointments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppointment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppointment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppointment'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
    delete:
      operationId: clinical_appointments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/clinical/medical-records/:
    get:
      operationId: clinical_medical_records_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicalRecordList'
          description: ''
    post:
      operationId: clinical_medical_records_create
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
          description: ''
  /api/v1/clinical/medical-records/{medical_record_pk}/prescriptions/:
    get:
      operationId: clinical_medical_records_prescriptions_list
      parameters:
      - in: path
        name: medical_record_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPrescriptionList'
          description: ''
    post:
      operationId: clinical_medical_records_prescriptions_create
      parameters:
      - in: path
        name: medical_record_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prescription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prescription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prescription'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: ''
  /api/v1/clinical/medical-records/{medical_record_pk}/prescriptions/{id}/:
    get:
      operationId: clinical_medical_records_prescriptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: medical_record_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: ''
    put:
      operationId: clinical_medical_records_prescriptions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: medical_record_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prescription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Prescription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Prescription'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: ''
    patch:
      operationId: clinical_medical_records_prescriptions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: medical_record_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPrescription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPrescription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPrescription'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: ''
    delete:
      operationId: clinical_medical_records_prescriptions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: medical_record_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/clinical/medical-records/{id}/:
    get:
      operationId: clinical_medical_records_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
          description: ''
    put:
      operationId: clinical_medical_records_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalRecord'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
          description: ''
    patch:
      operationId: clinical_medical_records_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicalRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMedicalRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMedicalRecord'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalRecord'
          description: ''
    delete:
      operationId: clinical_medical_records_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/clinical/patients/:
    get:
      operationId: clinical_patients_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientList'
          description: ''
    post:
      operationId: clinical_patients_create
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patient'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
  /api/v1/clinical/patients/{patient_pk}/documents/:
    get:
      operationId: clinical_patients_documents_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: patient_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentUploadList'
          description: ''
    post:
      operationId: clinical_patients_documents_create
      parameters:
      - in: path
        name: patient_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentUpload'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpload'
          description: ''
  /api/v1/clinical/patients/{patient_pk}/documents/{id}/:
    get:
      operationId: clinical_patients_documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: patient_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpload'
          description: ''
    put:
      operationId: clinical_patients_documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: patient_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentUpload'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpload'
          description: ''
    patch:
      operationId: clinical_patients_documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: patient_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpload'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpload'
          description: ''
    delete:
      operationId: clinical_patients_documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: patient_pk
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/clinical/patients/{patient_pk}/report-summary/:
    get:
      operationId: clinical_patients_report_summary_retrieve
      description: |-
        A custom view to get a summary of a patient's documents,
        grouped by internal and external organizations.
      parameters:
      - in: path
        name: patient_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/clinical/patients/{id}/:
    get:
      operationId: clinical_patients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    put:
      operationId: clinical_patients_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patient'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    patch:
      operationId: clinical_patients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPatient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPatient'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    delete:
      operationId: clinical_patients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - clinical
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/operations/branches/:
    get:
      operationId: operations_branches_list
      description: |-
        ViewSet for managing branches.
        Crucially, the queryset is filtered based on the user's organization.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - operations
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBranchList'
          description: ''
    post:
      operationId: operations_branches_create
      description: |-
        ViewSet for managing branches.
        Crucially, the queryset is filtered based on the user's organization.
      tags:
      - operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/v1/operations/branches/{id}/:
    get:
      operationId: operations_branches_retrieve
      description: |-
        ViewSet for managing branches.
        Crucially, the queryset is filtered based on the user's organization.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - operations
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: operations_branches_update
      description: |-
        ViewSet for managing branches.
        Crucially, the queryset is filtered based on the user's organization.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: operations_branches_partial_update
      description: |-
        ViewSet for managing branches.
        Crucially, the queryset is filtered based on the user's organization.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: operations_branches_destroy
      description: |-
        ViewSet for managing branches.
        Crucially, the queryset is filtered based on the user's organization.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - operations
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/operations/invites/:
    get:
      operationId: operations_invites_list
      description: |-
        ViewSet for creating and listing user invitations.
        - POST: Creates a new invitation for the admin's organization.
        - GET: Lists pending invitations for the admin's organization.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - operations
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserInviteList'
          description: ''
    post:
      operationId: operations_invites_create
      description: |-
        ViewSet for creating and listing user invitations.
        - POST: Creates a new invitation for the admin's organization.
        - GET: Lists pending invitations for the admin's organization.
      tags:
      - operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInvite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvite'
          description: ''
  /api/v1/operations/organizations/:
    get:
      operationId: operations_organizations_list
      description: A simple ViewSet for viewing organizations.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - operations
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: operations_organizations_create
      description: A simple ViewSet for viewing organizations.
      tags:
      - operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/v1/operations/organizations/{id}/:
    get:
      operationId: operations_organizations_retrieve
      description: A simple ViewSet for viewing organizations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - operations
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: operations_organizations_update
      description: A simple ViewSet for viewing organizations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: operations_organizations_partial_update
      description: A simple ViewSet for viewing organizations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - operations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: operations_organizations_destroy
      description: A simple ViewSet for viewing organizations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - operations
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/portal/my-appointments/:
    get:
      operationId: portal_my_appointments_list
      description: A read-only endpoint for the logged-in patient to view their own
        appointments.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - portal
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortalAppointmentList'
          description: ''
  /api/v1/portal/my-appointments/{id}/:
    get:
      operationId: portal_my_appointments_retrieve
      description: A read-only endpoint for the logged-in patient to view their own
        appointments.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this appointment.
        required: true
      tags:
      - portal
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalAppointment'
          description: ''
  /api/v1/portal/my-documents/:
    get:
      operationId: portal_my_documents_list
      description: |-
        A read-only endpoint for a patient to list all their documents
        and get secure download links.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - portal
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPortalDocumentList'
          description: ''
  /api/v1/portal/my-documents/{id}/:
    get:
      operationId: portal_my_documents_retrieve
      description: |-
        A read-only endpoint for a patient to list all their documents
        and get secure download links.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this patient document.
        required: true
      tags:
      - portal
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalDocument'
          description: ''
  /api/v1/portal/my-profile/:
    get:
      operationId: portal_my_profile_list
      description: A read-only endpoint for the logged-in patient to view their own
        profile.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - portal
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientList'
          description: ''
  /api/v1/portal/my-profile/{id}/:
    get:
      operationId: portal_my_profile_retrieve
      description: A read-only endpoint for the logged-in patient to view their own
        profile.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this patient.
        required: true
      tags:
      - portal
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
components:
  schemas:
    Appointment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        patient:
          type: string
          readOnly: true
        doctor:
          type: string
          readOnly: true
        branch:
          type: string
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        notes:
          type: string
        patient_id:
          type: string
          format: uuid
          writeOnly: true
        doctor_id:
          type: integer
          writeOnly: true
        branch_id:
          type: string
          format: uuid
          writeOnly: true
      required:
      - branch
      - branch_id
      - doctor
      - doctor_id
      - end_time
      - id
      - patient
      - patient_id
      - start_time
    Branch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        organization:
          type: string
          format: uuid
          readOnly: true
        organization_name:
          type: string
          readOnly: true
        address_line_1:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
      required:
      - address_line_1
      - city
      - id
      - name
      - organization
      - organization_name
    DocumentTypeEnum:
      enum:
      - LAB_REPORT
      - PRESCRIPTION
      - IMAGING_SCAN
      - INSURANCE
      - OTHER
      type: string
      description: |-
        * `LAB_REPORT` - Lab Report
        * `PRESCRIPTION` - Prescription
        * `IMAGING_SCAN` - Imaging Scan
        * `INSURANCE` - Insurance Card
        * `OTHER` - Other
    DocumentUpload:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        description:
          type: string
          maxLength: 255
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - description
      - file
      - id
      - uploaded_at
    MedicalRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        prescriptions:
          type: array
          items:
            $ref: '#/components/schemas/Prescription'
          readOnly: true
        diagnosis:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - diagnosis
      - id
      - prescriptions
      - updated_at
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 265
        type:
          $ref: '#/components/schemas/TypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    PaginatedAppointmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Appointment'
    PaginatedBranchList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
    PaginatedDocumentUploadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentUpload'
    PaginatedMedicalRecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicalRecord'
    PaginatedOrganizationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    PaginatedPatientList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Patient'
    PaginatedPortalAppointmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortalAppointment'
    PaginatedPortalDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortalDocument'
    PaginatedPrescriptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Prescription'
    PaginatedUserInviteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserInvite'
    PatchedAppointment:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        patient:
          type: string
          readOnly: true
        doctor:
          type: string
          readOnly: true
        branch:
          type: string
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        notes:
          type: string
        patient_id:
          type: string
          format: uuid
          writeOnly: true
        doctor_id:
          type: integer
          writeOnly: true
        branch_id:
          type: string
          format: uuid
          writeOnly: true
    PatchedBranch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        organization:
          type: string
          format: uuid
          readOnly: true
        organization_name:
          type: string
          readOnly: true
        address_line_1:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 100
    PatchedDocumentUpload:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        file:
          type: string
          format: uri
        description:
          type: string
          maxLength: 255
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
    PatchedMedicalRecord:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        prescriptions:
          type: array
          items:
            $ref: '#/components/schemas/Prescription'
          readOnly: true
        diagnosis:
          type: string
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedOrganization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 265
        type:
          $ref: '#/components/schemas/TypeEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPatient:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        organization_name:
          type: string
          readOnly: true
        external_user_id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
    PatchedPrescription:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        medication:
          type: string
          maxLength: 255
        dosage:
          type: string
          maxLength: 100
        frequency:
          type: string
          maxLength: 100
        duration_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration of the prescription in days.
    Patient:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        date_of_birth:
          type: string
          format: date
        organization_name:
          type: string
          readOnly: true
        external_user_id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - date_of_birth
      - external_user_id
      - first_name
      - id
      - last_name
      - organization_name
    PortalAppointment:
      type: object
      description: A patient-facing serializer for appointments that includes the
        nested medical record.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        doctor:
          type: string
          readOnly: true
        branch:
          type: string
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        medical_record:
          allOf:
          - $ref: '#/components/schemas/PortalMedicalRecord'
          readOnly: true
      required:
      - branch
      - doctor
      - end_time
      - id
      - medical_record
      - start_time
    PortalDocument:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        description:
          type: string
          maxLength: 255
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        download_url:
          type: string
          readOnly: true
      required:
      - description
      - download_url
      - id
      - uploaded_at
    PortalMedicalRecord:
      type: object
      description: |-
        A serializer for medical records that exposes only patient-safe fields.
        It also includes all related prescriptions.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        diagnosis:
          type: string
        prescriptions:
          type: array
          items:
            $ref: '#/components/schemas/PortalPrescription'
          readOnly: true
      required:
      - diagnosis
      - id
      - prescriptions
    PortalPrescription:
      type: object
      description: A simple serializer for prescriptions, showing only patient-relevant
        info.
      properties:
        medication:
          type: string
          maxLength: 255
        dosage:
          type: string
          maxLength: 100
        frequency:
          type: string
          maxLength: 100
        duration_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration of the prescription in days.
      required:
      - dosage
      - duration_days
      - frequency
      - medication
    Prescription:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        medication:
          type: string
          maxLength: 255
        dosage:
          type: string
          maxLength: 100
        frequency:
          type: string
          maxLength: 100
        duration_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration of the prescription in days.
      required:
      - dosage
      - duration_days
      - frequency
      - id
      - medication
    RoleEnum:
      enum:
      - ADMIN
      - DOCTOR
      - RECEPTIONIST
      type: string
      description: |-
        * `ADMIN` - Admin
        * `DOCTOR` - Doctor
        * `RECEPTIONIST` - Receptionist
    StatusEnum:
      enum:
      - SCHEDULED
      - COMPLETED
      - CANCELLED
      type: string
      description: |-
        * `SCHEDULED` - Scheduled
        * `COMPLETED` - Completed
        * `CANCELLED` - Cancelled
    TypeEnum:
      enum:
      - CLINIC
      - HOSPITAL
      type: string
      description: |-
        * `CLINIC` - Clinic
        * `HOSPITAL` - Hospital
    UserInvite:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - email
      - role
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
tags:
- name: Organization
  description: Endpoints for managing top-level organizations.
- name: Branches
  description: Endpoints for managing physical hospital/clinic branches.
- name: Invites
  description: Endpoints for inviting new users to an organization.
- name: Clinical Staff - Patients
  description: Staff-facing endpoints for managing patients.
- name: Clinical Staff - Appointments
  description: Staff-facing endpoints for managing appointments.
- name: Patient Portal - My Profile
  description: Patient-facing endpoint for viewing a personal profile.
- name: Medical Records
  description: medical records apis
